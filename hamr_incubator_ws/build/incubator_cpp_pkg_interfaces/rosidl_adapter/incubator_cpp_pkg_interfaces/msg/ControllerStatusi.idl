// generated from rosidl_adapter/resource/msg.idl.em
// with input from incubator_cpp_pkg_interfaces/msg/ControllerStatusi.msg
// generated code does not contain a copyright notice

#include "incubator_cpp_pkg_interfaces/msg/Boolean.idl"
#include "incubator_cpp_pkg_interfaces/msg/ControllerState.idl"
#include "incubator_cpp_pkg_interfaces/msg/DegreesCi.idl"
#include "incubator_cpp_pkg_interfaces/msg/Secondsi.idl"

module incubator_cpp_pkg_interfaces {
  module msg {
    struct ControllerStatusi {
      incubator_cpp_pkg_interfaces::msg::Secondsi cur_time;

      incubator_cpp_pkg_interfaces::msg::Boolean heater_on;

      incubator_cpp_pkg_interfaces::msg::Boolean fan_on;

      incubator_cpp_pkg_interfaces::msg::ControllerState current_state;

      incubator_cpp_pkg_interfaces::msg::Secondsi next_time;

      incubator_cpp_pkg_interfaces::msg::DegreesCi target_temp;

      incubator_cpp_pkg_interfaces::msg::DegreesCi lower_bound;

      incubator_cpp_pkg_interfaces::msg::Secondsi heating_time;

      incubator_cpp_pkg_interfaces::msg::Secondsi heating_gap;
    };
  };
};
